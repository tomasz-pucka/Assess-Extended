<Application x:Class="UTA.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:icons="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.Material"
             xmlns:local="clr-namespace:UTA"
             xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:converters="clr-namespace:UTA.Converters"
             StartupUri="Views/MainView.xaml">
  <Application.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Cobalt.xaml" />
        <ResourceDictionary
          Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <converters:IndexToRankConverter x:Key="IndexToRankConverter"/>

      <!--Cobalt color: #3373F2-->

      <SolidColorBrush x:Key="ColorInterface0" Color="#BEBEBE" />
      <SolidColorBrush x:Key="ColorInterface1" Color="#C8C8C8" />
      <SolidColorBrush x:Key="ColorInterface2" Color="#D2D2D2" />
      <SolidColorBrush x:Key="ColorInterface3" Color="#DCDCDC" />
      <SolidColorBrush x:Key="ColorInterface4" Color="#E6E6E6" />
      <SolidColorBrush x:Key="ColorInterface5" Color="#F0F0F0" />
      <SolidColorBrush x:Key="ColorInterface6" Color="#F8F8F8" />
      <SolidColorBrush x:Key="ColorInterface7" Color="#FCFCFC" />

      <SolidColorBrush x:Key="ColorInterface0Hover" Color="#B0B0B0" />
      <SolidColorBrush x:Key="ColorInterface1Hover" Color="#BABABA" />
      <SolidColorBrush x:Key="ColorInterface2Hover" Color="#C4C4C4" />
      <SolidColorBrush x:Key="ColorInterface3Hover" Color="#CECECE" />
      <SolidColorBrush x:Key="ColorInterface4Hover" Color="#D8D8D8" />
      <SolidColorBrush x:Key="ColorInterface5Hover" Color="#E2E2E2" />
      <SolidColorBrush x:Key="ColorInterface6Hover" Color="#EAEAEA" />
      <SolidColorBrush x:Key="ColorInterface7Hover" Color="#EEEEEE" />

      <SolidColorBrush x:Key="ColorPrimary" Color="#3373f2" />
      <SolidColorBrush x:Key="ColorSecondary" Color="#6E6E6E" />
      <SolidColorBrush x:Key="ColorTertiary" Color="#8C8C8C" />
      <SolidColorBrush x:Key="ColorDanger" Color="#DC000C" />

      <SolidColorBrush x:Key="ColorPrimaryHover" Color="#4680f2" />
      <SolidColorBrush x:Key="ColorSecondaryHover" Color="#7C7C7C" />
      <SolidColorBrush x:Key="ColorTertiaryHover" Color="#9A9A9A" />
      <SolidColorBrush x:Key="ColorDangerHover" Color="#dc3b44" />
      
      <SolidColorBrush x:Key="ColorBorders1" Color="#AAAAAA" />
      <SolidColorBrush x:Key="ColorBorders2" Color="#B9B9B9" />
      <SolidColorBrush x:Key="ColorBorders3" Color="#E6E6E6" />
      <SolidColorBrush x:Key="ColorSeparator" Color="#969696" />
      <SolidColorBrush x:Key="ColorFontLight" Color="White" />
      <SolidColorBrush x:Key="ColorFontDark" Color="Black" />


      <sys:Double x:Key="CommonPadding">12</sys:Double>

      <Thickness x:Key="CommonLayoutPadding" Left="{StaticResource CommonPadding}"
                 Right="{StaticResource CommonPadding}" Top="{StaticResource CommonPadding}"
                 Bottom="{StaticResource CommonPadding}" />

      <sys:Double x:Key="CommonFontSize1">16</sys:Double>
      <sys:Double x:Key="CommonFontSize2">14</sys:Double>


      <!--keyed styles-->
      <Style x:Key="RoundButton" TargetType="{x:Type Button}">
        <Style.Resources>
          <CornerRadius x:Key="RoundButtonCornerRadius">3</CornerRadius>
        </Style.Resources>

        <Setter Property="FocusVisualStyle">
          <Setter.Value>
            <Style>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate>
                    <Border Margin="-1" BorderThickness="2" CornerRadius="{StaticResource RoundButtonCornerRadius}"
                            BorderBrush="Black" />
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </Setter.Value>
        </Setter>

        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                      Background="{TemplateBinding Background}" CornerRadius="{StaticResource RoundButtonCornerRadius}"
                      SnapsToDevicePixels="true" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                <ContentPresenter Focusable="False" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True" VerticalAlignment="Center" />
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="PrimaryRoundButton" BasedOn="{StaticResource RoundButton}" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource ColorFontLight}" />
        <Style.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{StaticResource ColorPrimaryHover}" />
          </Trigger>
          <Trigger Property="IsMouseOver" Value="False">
            <Setter Property="Background" Value="{StaticResource ColorPrimary}" />
          </Trigger>
        </Style.Triggers>
      </Style>

      <Style x:Key="SecondaryRoundButton" BasedOn="{StaticResource RoundButton}" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource ColorFontLight}" />
        <Style.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{StaticResource ColorSecondaryHover}" />
          </Trigger>
          <Trigger Property="IsMouseOver" Value="False">
            <Setter Property="Background" Value="{StaticResource ColorSecondary}" />
          </Trigger>
        </Style.Triggers>
      </Style>

      <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MetroDataGridColumnHeader}"
             x:Key="CenteredDataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
      </Style>

      <Style TargetType="{x:Type DataGridCell}" x:Key="CenteredDataGridCell">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type DataGridCell}">
              <Grid Background="Transparent">
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style TargetType="{x:Type DataGridCell}" x:Key="LeftSidedDataGridCell">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type DataGridCell}">
              <Grid Background="Transparent">
                <ContentPresenter VerticalAlignment="Center"/>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>


      <!--keyed templates-->
      <ControlTemplate x:Key="TransparentButtonTemplateInterface0" TargetType="{x:Type ButtonBase}">
        <Border x:Name="Border" BorderThickness="0" Background="Transparent" CornerRadius="2"
                VerticalAlignment="Center">
          <ContentPresenter Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" TargetName="Border" Value="{StaticResource ColorInterface0Hover}" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>


      <ControlTemplate x:Key="TransparentButtonTemplateInterface1" TargetType="{x:Type ButtonBase}">
        <Border x:Name="Border" BorderThickness="0" Background="Transparent" CornerRadius="2"
                VerticalAlignment="Center">
          <ContentPresenter Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" TargetName="Border" Value="{StaticResource ColorInterface1Hover}" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>

      <ControlTemplate x:Key="TransparentButtonTemplateInterface2" TargetType="{x:Type ButtonBase}">
        <Border x:Name="Border" BorderThickness="0" Background="Transparent" CornerRadius="2"
                VerticalAlignment="Center">
          <ContentPresenter Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" TargetName="Border" Value="{StaticResource ColorInterface2Hover}" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>

      <ControlTemplate x:Key="TransparentButtonTemplateInterface3" TargetType="{x:Type ButtonBase}">
        <Border x:Name="Border" BorderThickness="0" Background="Transparent" CornerRadius="2"
                VerticalAlignment="Center">
          <ContentPresenter Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" TargetName="Border" Value="{StaticResource ColorInterface3Hover}" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>

      <ControlTemplate x:Key="TransparentButtonTemplateInterface4" TargetType="{x:Type ButtonBase}">
        <Border x:Name="Border" BorderThickness="0" Background="Transparent" CornerRadius="2"
                VerticalAlignment="Center">
          <ContentPresenter Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" TargetName="Border" Value="{StaticResource ColorInterface4Hover}" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>


      <ControlTemplate x:Key="TransparentButtonTemplateInterface5" TargetType="{x:Type ButtonBase}">
        <Border x:Name="Border" BorderThickness="0" Background="Transparent" CornerRadius="2"
                VerticalAlignment="Center">
          <ContentPresenter Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" TargetName="Border" Value="{StaticResource ColorInterface5Hover}" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>

      <ControlTemplate x:Key="TransparentButtonTemplateInterface6" TargetType="{x:Type ButtonBase}">
        <Border x:Name="Border" BorderThickness="0" Background="Transparent" CornerRadius="2"
                VerticalAlignment="Center">
          <ContentPresenter Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" TargetName="Border" Value="{StaticResource ColorInterface6Hover}" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>

      <ControlTemplate x:Key="TransparentButtonTemplateInterface7" TargetType="{x:Type ButtonBase}">
        <Border x:Name="Border" BorderThickness="0" Background="Transparent" CornerRadius="2"
                VerticalAlignment="Center">
          <ContentPresenter Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" TargetName="Border" Value="{StaticResource ColorInterface7Hover}" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>


      <!--global templates-->

    </ResourceDictionary>
  </Application.Resources>
</Application>