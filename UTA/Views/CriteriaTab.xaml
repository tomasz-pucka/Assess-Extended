<UserControl x:Class="UTA.Views.CriteriaTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:icons="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.Material"
             xmlns:criterion="clr-namespace:DataModel.Input;assembly=DataModel"
             xmlns:validation="clr-namespace:UTA.Models.DataValidation"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d"
             d:DesignHeight="700" d:DesignWidth="900" Unloaded="TabUnloaded">
  <Grid Margin="12" Background="{StaticResource ColorInterface7}">
    <Grid.Resources>
      <CollectionViewSource x:Key="CriteriaCollectionViewSource" Source="{Binding Criteria.CriteriaCollection, UpdateSourceTrigger=PropertyChanged}" />
    </Grid.Resources>

    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>

    <StackPanel Name="AddCriterionContainer" DataContext="{Binding NewCriterion, UpdateSourceTrigger=PropertyChanged}" Orientation="Horizontal"
                Margin="0,0,0,8"
                Validation.ErrorTemplate="{x:Null}">
      <StackPanel.BindingGroup>
        <BindingGroup />
      </StackPanel.BindingGroup>

      <StackPanel.Resources>
        <Style TargetType="{x:Type StackPanel}">
          <Setter Property="Margin" Value="0,0,12,0" />
        </Style>
      </StackPanel.Resources>

      <i:Interaction.Triggers>
        <i:KeyTrigger Key="Enter" FiredOn="KeyUp">
          <i:InvokeCommandAction Command="{Binding ElementName=CriteriaDataGrid, Path=DataContext.AddCriterionCommand}"
                                 CommandParameter="{Binding ElementName=AddCriterionContainer, Path=BindingGroup}" />
        </i:KeyTrigger>
      </i:Interaction.Triggers>

      <StackPanel>
        <TextBlock Text="Name" />
        <TextBox Name="NameTextBox" TextChanged="NameTextBoxTextChanged">
          <Binding Path="Name" UpdateSourceTrigger="PropertyChanged">
            <Binding.ValidationRules>
              <validation:CriterionNameValidationRule
                CriteriaCollectionViewSource="{StaticResource CriteriaCollectionViewSource}"
                ValidationStep="RawProposedValue" />
            </Binding.ValidationRules>
          </Binding>
        </TextBox>
      </StackPanel>

      <StackPanel>
        <TextBlock Text="Type" />
        <ComboBox ItemsSource="{Binding CriterionDirectionTypesList}"
                  SelectedItem="{Binding CriterionDirection, UpdateSourceTrigger=PropertyChanged}" />
      </StackPanel>

      <StackPanel>
        <TextBlock Text="Linear Segments" />
        <controls:NumericUpDown Value="{Binding LinearSegments, UpdateSourceTrigger=PropertyChanged}"
                                Minimum="{x:Static criterion:Criterion.MinNumberOfLinearSegments}"
                                Maximum="{x:Static criterion:Criterion.MaxNumberOfLinearSegments}"
                                NumericInputMode="Numbers" />
      </StackPanel>

      <StackPanel>
        <TextBlock Text="Description" />
        <TextBox Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Width="200" TextWrapping="Wrap" />
      </StackPanel>
    </StackPanel>

    <Button Name="AddButton" Grid.Row="1" Content="Add Criterion" Margin="0,0,0,24"
            Command="{Binding ElementName=CriteriaDataGrid, Path=DataContext.AddCriterionCommand}"
            CommandParameter="{Binding ElementName=AddCriterionContainer, Path=BindingGroup}" />

    <DataGrid Name="CriteriaDataGrid" Grid.Row="2" ItemsSource="{Binding Criteria.CriteriaCollection, UpdateSourceTrigger=PropertyChanged}"
              AutoGenerateColumns="False" SelectionMode="Single"
              BorderBrush="Gray" BorderThickness="1" IsReadOnly="True" CanUserAddRows="False"
              CanUserReorderColumns="False" CanUserResizeRows="False" IsSynchronizedWithCurrentItem="True"
              PreviewKeyDown="CriteriaDataGridPreviewKeyDown" LoadingRowDetails="DataGridRowClicked">
      <DataGrid.CellStyle>
        <Style TargetType="DataGridCell">
          <Setter Property="Foreground" Value="Black" />
          <Setter Property="Background" Value="Transparent" />
          <Setter Property="BorderThickness" Value="0" />
          <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
      </DataGrid.CellStyle>

      <DataGrid.RowStyle>
        <Style TargetType="DataGridRow">
          <Setter Property="Background" Value="White" />
          <Setter Property="BorderThickness" Value="0,0,0,1" />
          <Setter Property="BorderBrush" Value="{StaticResource ColorInterface3}" />
          <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{StaticResource ColorInterface6}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" Value="{StaticResource ColorInterface6}" />
            </Trigger>
          </Style.Triggers>
        </Style>
      </DataGrid.RowStyle>

      <DataGrid.RowDetailsTemplate>
        <DataTemplate>
          <StackPanel Orientation="Horizontal" DataContext="{Binding}" Margin="12,8">
            <StackPanel.Resources>
              <Style TargetType="{x:Type StackPanel}">
                <Setter Property="Margin" Value="0,0,12,0" />
              </Style>
            </StackPanel.Resources>

            <StackPanel>
              <TextBlock Text="Name" />
              <TextBox>
                <Binding Path="Name" UpdateSourceTrigger="PropertyChanged">
                  <Binding.ValidationRules>
                    <validation:CriterionNameValidationRule
                      CriteriaCollectionViewSource="{StaticResource CriteriaCollectionViewSource}"
                      ValidationStep="RawProposedValue" />
                  </Binding.ValidationRules>
                </Binding>
              </TextBox>
            </StackPanel>

            <StackPanel>
              <TextBlock Text="Type" />
              <ComboBox ItemsSource="{Binding CriterionDirectionTypesList}"
                        SelectedItem="{Binding CriterionDirection, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>

            <StackPanel>
              <TextBlock Text="Linear Segments" />
              <controls:NumericUpDown
                Value="{Binding LinearSegments, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                Minimum="{x:Static criterion:Criterion.MinNumberOfLinearSegments}"
                Maximum="{x:Static criterion:Criterion.MaxNumberOfLinearSegments}"
                NumericInputMode="Numbers" />
            </StackPanel>

            <StackPanel>
              <TextBlock Text="Description" />
              <TextBox Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
          </StackPanel>
        </DataTemplate>
      </DataGrid.RowDetailsTemplate>

      <DataGrid.Columns>
        <DataGridTemplateColumn>
          <DataGridTemplateColumn.CellTemplate>
            <ItemContainerTemplate>
              <Button Command="{Binding ElementName=CriteriaDataGrid, Path=DataContext.RemoveCriterionCommand}"
                      CommandParameter="{Binding}" Margin="4">
                <Button.Template>
                  <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Border" BorderThickness="1" BorderBrush="{StaticResource ColorDanger}"
                            Background="Transparent" CornerRadius="2" VerticalAlignment="Center">
                      <ContentPresenter Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="Border" Value="{StaticResource ColorInterface6Hover}" />
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Button.Template>

                <i:Interaction.Triggers>
                  <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <i:InvokeCommandAction
                      Command="{Binding ElementName=CriteriaDataGrid, Path=DataContext.RemoveCriterionCommand}"
                      CommandParameter="{Binding}" />
                  </i:EventTrigger>
                </i:Interaction.Triggers>

                <icons:PackIconMaterial Kind="Delete" Width="16" Height="16" Foreground="{StaticResource ColorDanger}" />
              </Button>
            </ItemContainerTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>

        <DataGridTextColumn Header="Name" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
        <DataGridTextColumn Header="Type" Binding="{Binding CriterionDirection, UpdateSourceTrigger=PropertyChanged}" />
        <DataGridTextColumn Header="Linear Segments" Binding="{Binding LinearSegments, UpdateSourceTrigger=PropertyChanged}" />
        <DataGridTextColumn Header="Description" Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}" />
      </DataGrid.Columns>
    </DataGrid>
  </Grid>
</UserControl>